/**
 * 面向对象编程是一种编程范式或编程风格。
 * 它以类或对象作为组织代码的基本单元，并将封装、抽象、继承、多态四个特性，作为代码设计和实现的基石;
 * 面向对象编程时候，我们是在思考，如何给业务建模，如何将真实的世界映射为类或者对象，这让我们更加能聚焦到业务本身
 */

// 封装:
// 封装也叫作信息隐藏或者数据访问保护。类通过暴露有限的访问接口，授权外部仅能通过类提供的方方法（或者叫函数）来访问内部信息或者数据

// 继承
// 代码复用, 复制特性

// 多态
// 多态是指，子类可以替换父类，在实际的代码运行过程中，调用子类的方法实现
// duck-typing 实现多态的方式非常灵活, 只要两个类具有相同的方法，就可以实现多态, 通过同一个函数来调用其方法
// 多个类具有同一行为

// 优势:
// 对于大规模复杂程序的开发，程序的处理流程并非单一的一条主线，而是错综复杂的网状结构。
// 面向对象编程比起面向过程编程，更能应对这种复杂类型的程序开发。
// 面向对象编程相比面向过程编程，具有更加丰富的特性（封装、抽象、继承、多态）。利用这些特性编写出来的代码，更加易扩展、易复用、易维护。

